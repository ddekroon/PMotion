<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <title>How to use Perpetual Motion</title>
        <link rel="stylesheet" type="text/css" href="howToStyle.css" />
    </head>
    <body>
    	<table class='master'>
            <tr>
            	<td>
                	<table class='headSection'>
                    	<tr>
                            <th>
                                <a name="home">How the System was Built</a>
                            </th>
                        </tr>
                        <tr>
                            <td>
                                <ol>
                                	<li><a href="#Basic">Basic Information</a></li>
                                    <li><a href="#Registration">Registration</a>
                                        <ul>
                                            <li type="disc">
                                                <a href="#userSignup">User Registration</a>
                                            </li><li type="disc">
                                                <a href="#changingInfo">Changing account username/password</a>
                                            </li><li type="disc">
                                                <a href="#login">Login/Logout</a>
                                            </li><li type="disc">
                                                <a href="#memberspage">Members Page</a>
                                            </li><li type="disc">
                                                <a href="#teamSignup">Team Signup</a>
                                            </li><li type="disc">
                                                <a href="#groupSignup">Group Signup</a>
                                            </li>
                                        </ul>
                                    </li><li><a href="#allSpirts">All Sports</a>
                                        <ul>
                                            <li type="disc">
                                                <a href="#scoreReporter">Score Reporter</a>
                                            </li><li type="disc">
                                                <a href="#standings">Standings</a>
                                            </li><li type="disc">
                                                <a href="#teamPage">Team Page</a>
                                            </li><li type="disc">
                                                <a href="#picturePages">Picture Pages</a>
                                            </li>
                                        </ul>
                                    </li><li><a href="#endSeason">End of Season Routines</a>
                                        <ul>
                                            <li type="disc">
                                                <a href="#closeStandingsSeason">Closing out standings for the Season</a>
                                            </li>
                                        </ul>
                                    </li>
                                </ol> 
                            </a>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr height="100px">
            	<td>
                	 <br />
                </td>
            </tr>
            <tr>
            	<td>
                    <table class='infoSection'>
                    <tr>
                            <th>
                                <a name="Basic">Basic Information</a><a style="font-size:10px" href='#home'> (Home)</a>
                            </th>
                        </tr>
                        <tr>
                        	<td>
                            	This website has been a working progress for 11 years. It started with Dave creating the framework with frames. Then, Darryl was hired on and he created
                                a score reporter, standings page, an online registration for teams, and some control panel functionality. Then Ben came in for 2 years and did diddely squat.
                                What is there as of August 13th, 2012 is all either frame based stuff Dave has created, rewritten programs Derek made out of Darryl and Bens old stuff, and
                                alot of newly created programs Derek made. Also Brad and Alex made stuff!<br /><br />
                                First things to know:
                                <li>
                                	Almost every php program on the server connects to 'connect.php' and 'tableNames.php.' These are the programs needed to connect to the
                                	database, and the table names in the perpetualmotion database. DO NOT MOVE OR DELETE THEM. (also login.php and logout.php need to be in the www folder)
                                </li><li>
                                	These programs were all put in place by a second year coop student who coming into the job didn't know a thing about web development. Although
                                    I wouldn't recommend diving in and moving/ deleting stuff, stuff's not perfect on the site; everyone knows that.
                                </li><li>
                                	Dave has local copies of everything on his computer, if you change something download the new version onto his computer. Otherwise he'll make an update to
                                    his local version of the page and upload it to the server, erasing anything you may have done.
                                </li><li>
                                	The database is setup so that almost everything is connected. Every database has a set id for each of its rows and each of those ids are connected
                                    with other databases ids so that when you pull information you can get everything at once. 
                                </li>
                            </td>
                        </tr>
                        <tr>
                            <th>
                                <a name="Registration">Registration</a><a style="font-size:10px" href='#home'> (Home)</a>
                            </th>
                        </tr>
                        <tr>
                        	<td>
                            	All registration based files are in the Registration folder of the www directory (except login.php). 
                            </td>
                        </tr>
                        <tr>
                        	<th>
                                <a name="userSignup">User Registration</a><a style="font-size:10px" href='#home'> (Home)</a>
                            </th>
                        </tr>
                        <tr>
                        	<td>
                            	For a user to signup a new account, they need only go to login.php (one way or another) and click 'Create a new account.' From there they will be linked to a
                                page in the Registration folder called createAccount.php. All fields are required and error checked for validity, along with if the username/email have 
                                already been used. If all the information is valid, it gets stored into users_dbtable and their account history is updated. A validation email is sent
                                to the user with their account information.
                            </td>
                        </tr>
                        <tr>
                        	<th>
                                <a name="changingInfo">Changing account username/password</a><a style="font-size:10px" href='#home'> (Home)</a>
                            </th>
                        </tr>
                        <tr>
                        	<td>
                            	If the user forgets/realizes their username is juvenile like we all do from time to time, they can change them quite easily. They need only get to login then
                                click either change link on the bottom of the page. From there they need to enter their email address and get sent their username and a validation code. 
                                A link is sent with the email either way and the user clicks it to go to resetAccountInfo.php (also in Registration). From this page they can put in their
                                new username/password and validation key (created by resetAccount.php and stored in the user database). On submit if their validation key was correct
                                and new information passed error checking, their username/password is reset and an email is sent with their new information.
                            </td>
                        </tr>
                        <tr>
                            <th>
                                <a name="login">Login/Logout</a><a style="font-size:10px" href='#home'> (Home)</a>
                            </th>
                        </tr>
                        <tr>
                        	<td>
                            	Login is multipurpose because it is one file used for both general public login and control panel login. To login a user put in their username/password
                                then presses submit. On submit, the program compares their username with the databases, then compares the md5 version of their submitted password with
                                whats in the database. Md5 is the way the program encrypts the passwords so that we don't know what they are by looking in the database. If it finds
                                a the information is valid it redirects the browser to either /control/index.php or /Registration/membersPage.php depending on whether or not 
                                ?siteDirect=something in the login page URL. Logout is pretty simple, just destroys the current session so anyone using that browser doesn't stay logged
                                in when they come back to the site. 
                            </td>
                        </tr>
                        <tr>
                        	<th>
                                <a name="memberspage">Members Page</a><a style="font-size:10px" href='#home'> (Home)</a>
                        	</th>
                        </tr>
                        <tr>
                        	<td>
                            	The memebers page currently holds the award for ugliest page on perpetualmotion.org. When a user logs in this is the page they get immidiately linked to.
                                From here all their past teams will show up for re-registration. To get these the userID found from logging in is compared to all the team_managed_by_user_id
                                fields in the team table, along with team_deleted = 0. If a team was signed up for a league from 2 years pervious then it will automatically be set to 
                                deleted, just so the past teams page doesn't get too crowded for busy users. Aside from past teams, users can sign up for new teams from the members page.
                                This is done by clicking any of the four sport logos at the bottom of the page. All those logos are rigged up to send the 'clicker' to signupTeam.php
                                with the sport as input.
                            </td>
                        </tr>
                        <tr>
                        	<th>
                                <a name="teamSignup">Team Signup</a><a style="font-size:10px" href='#home'> (Home)</a>
                            </th>
                        </tr>
                        <tr>
                        	<td>
                            	This page holds the award for worst coded page on the site. It is a pretty standard PHP form getting some data from the user, then putting it in the database
                                along with sending emails to (currently) Dave, Zach, and Derek. The problem is, it was rebuilt a couple different times and each time I didn't put much 
                                good coding practice into it. The sport needs to be given via the URL, season is found by season_available_registration. All leagues with these set
                                sport and league IDs are put in the leagues drop down for the user to sign up for. A captain, second player, team name, season, and payment method are needed
                                for the program to accept the registration. Otherwise a javascript pop up will show up telling the user what they did wrong. If the client has javascript
                                disabled, they can't submit ever because javascript is needed to show the payment method option. Also, without javascript, PHP will error check the same
                                things so spammers are kept fairly tame. All the data gets put into the teams and players databases, with the player designated as captain getting
                                player_is_captain = 1 in the players database. After the team is inserted, comments and user history are updated then the registration email is sent out. 
                                Finnaly the browser is linked to the thankyouteam signup page. <br /><br />It should also be noted that when a team signs up it's team picture name is
                                set to 'leagueID-teamNumInLeague'. This never gets changed and is spit out in the control panels show team picture IDs program.
                            </td>
                        </tr>
                        <tr>
                        	<th>
                            	<a name="groupSignup">Group Signup</a><a style="font-size:10px" href='#home'> (Home)</a>
                            </th>
                        </tr>
                        <tr>
                        	<td>
                            	This program works for both group and individual signup. It works alot the same as team registration with a few subtle differences. First, a player
                                registered with this program is also put in the individuals table (looking back makes no sense, should just be a player_is_individual field). Each additional
                                signup needs to have a valid first name, last name, and email. If there is more than one person signing up, it is considered a group and as such every
                                player is given a small group number. 50 rows are always loaded through PHP however only 5 show up by default. If the client wants more rows they simply
                                type in how many and press submit, then all the extra rows they requested will show up. Once again payment method is error checked and required, however
                                how they heard about us is starred for necessary but not error checked. Emails are sent to everyone that signed up/Dave/Zach/Derek just like with teams.
                            </td>
   		                </tr>
                        <tr>
                            <th>
                                <a name="allSports">All Sports</a><a style="font-size:10px" href='#home'> (Home)</a>
                            </th>
                        </tr>
                        <tr>
                        	<td>
                            	The allSports folder is where any file that is linked by all four sports sub pages should be placed. This includes standings, score reporter, team page, picture
                                page stuff, and waiver. Not everything that should be in here actually is here, but in time this is where it should all be migrated.
                            </td>
                        </tr>
                        <tr>
                        	<th>
                            	<a name="scoreReporter">Score Reporter</a><a style="font-size:10px" href='#home'> (Home)</a>
                            </th>
                        </tr>
                        <tr>	
                            <td>
                            	The score reporter may look small and elegant, but its not. This is another one of those, I made it at the beginning of summer pages, so it's not exactly
                                easy to read. The sport is the only input given to scoreReporter.php and based on what it gets the logo and page colours change. The program starts
                                execution by checking the current week, and seeing if the league week should be changed. If all the teams have submitted for the week before, and the next date
                                in the dates database is earlier than the execution date (including first match time), the leagues week changes. This affects what opponents will be 
                                pulled from the scheduled matches table to autopopulate the opponent drop downs, and what week the score will be submitted for. The date the program 
                                believes the league is on is displayed in the top
                                section so you can always see it. The user inputs their league, and team, along with results and selects 'Submit' to run the program. On submit, the
                                results are error checked (one of them must be selected) along with the opponents not being the same or equal to the submitting team. The user has to enter
                                more than 3 characters in the name field, spirit scores, comments, and scores arent error checked. The exception to this is if a spirit of less than 4
                                is entered, a comment as to why must be included. Email is not checked but if there is one enetered it must be valid (I think). All error checking is done
                                in javascript, then if that gets through by PHP. Once the program gets through
                                error checking it enters the data into the score reports database. If the team has already submitted a score for that week the new ones go in with ignored
                                set to 1. This makes it so the standings and control panel pages arent affected by the extra submissions. An email is sent to Zach, Dave, and Derek with 
                                the results submitted and what their opponents submitted for them. The emails are very important.
                            </td>
                        </tr>
                        <tr>
                        	<th>
                            	<a name ="standings">Standings</a><a style="font-size:10px" href='#home'> (Home)</a>
                            </th>
                        </tr>
                        <tr>	
                            <td>
                            	Most visited page on the site. When used just as the standings page it takes in the league as an argument then figures everything out from there.
                                The first thing it does is checks if spirit scores should be hidden or not. It does this by comparing the current time and date to those of whats in the
                                leagues database. In the leagues database there is a time for when the spirit should be hidden, how many days to be hidden, and what time to show it.
                                It uses the date played and these inputs to know when they should be hidden, and when shown. It then gets all the team data for whatever league number
                                is stored in the variable '$leagueID.' This is either given in the URL, or already figured out on public and control panel team pages. There are variables
                                in the leagues database for whether or not the league gets sorted by win% or points, and utilizes usort with compare functions to keep the teams sorted.
                                As it goes through the leagues it checks to see what is the max week a team submitted their scores. If a team submitted a score for a week that's greater
                                than the league week in standings, it increments set value. This is important so that the right date for the league shows up.<br /><br />
                                An important design in the standings page is that if the league_week is > 50, it means the league has been closed out for good. If this is true, it
                                also means someone put effort into sorting team positions after playoffs. In the teams database each team has a column for team final position and
                                team final spirit position. When a league getss closed out for good, these values get set and are sorted by them for the rest of time. This also makes
                                the display change from the normal standings to the old html closed out standings look (neat eh!).<br /><br />
                                The standings style changes whenever it gets linked. If the control panel links it, the totals for wins, losses, ties, and spirit averages are shown.
                                The totals are calculated whenever the standings page is called on, but only displays if the variable '$showTotals' is set. This gets set at the
                                beginning of the program if another variable '$isBeingIncludedInAnotherPage' is set to 2, which only happens in the control panel team page.<br /><br />
                                Sorting is kindve confusing in this program. There are 3 functions, comparePoints, comparePercent, and comparePosition which are used in usort to sort
                                the teams as they come in. ComparePoints and comparePercent take in two teams and will compare first their points or win%, then their spirit, then
                                if theyre still tied, it will go into scoreSubmissionsTable and figure out who won between them. The team that won will be sorted on top. If they never
                                played eachother, or tied or something then the team that comes first in the database will be on top. If this happens, go to the control panel and add a 
                                phantom spirit to put whichever team you want on top... on top.
                            </td>
                        </tr>
                        <tr>
                        	<th>
                            	<a name ="teamPage">Team Page</a><a style="font-size:10px" href='#home'> (Home)</a>
                            </th>
                        </tr>
                        <tr>	
                            <td>
                            	The team page is one of the best ideas Zach ever had. Takes teamID in from the URL. This program goes into the score submissions table and scheduled matches 
                                table to get future and past match data. First it goes into the scheduled matches table and creates an array of all the games the team will have. It uses
                                the matches dateIDs as identifiers so that the score submission rows can link to them. Once it has all the scheduled matches, you guessed it, it goes
                                through the score submissions table and fills in the results from each date. Now the program has a nice array of all the information it needs for each match.
                                It then cycles the array and prints out the data in a formattted table.<br /><br />
                                The team picture is next, the program gets the league picture link from the leagues table and the picture name from the teams table. It then checks to see
                                if the picture exists on the server, and if so shows it in a frame 576px wide by 432px tall. If not, the row it takes up doesnt show up so no box with
                                a red x can be seen.<br /><br />
                                Finally the standings are linked to the page. A variable '$isBeingLinkedByAnotherPage' is set to 1, indicating to the standings page that it shouldnt
                                get a leagueID from the URL, because the team page already has one. The standings take on the new style of the teamPageStyle.css file. Done!
                            </td>
                        </tr>
                        <tr>
                        	<th>
                            	<a name='picturePages'>Picture Pages</a><a style="font-size:10px" href='#home'> (Home)</a>
                            </th>
                        </tr>
                        <tr>	
                            <td>
                            	All the picture stuff for team pictures is in the folder allSports/TeamPictures. I will explain what each of the files in that folder is for:
                                <ul>
                                <li>
                                	archivePicturePage: This file displays a team picture and name. From Summer 2012 on, this program takes in the teamID from the URL and performs
                                    its calculations with it. Before that, id was given as a parameter, which is a string of the form leagueNum-seasonNum-year-numInLeague. With the old
                                    system that id was compared to teampicturearchive for the pic link and if that link existed, the picture was shown. With the new system, the picture
                                    link is obtained from the leagues table column 'league_picture_link', and the picture name is obtained from the team table column 'team_picture_name.'
                                    If the file pointed to by combining those two elements together existed (.jpg or .JPG), then the picture would be shown. NOTE: The sharing functions
                                    of the teamPicturePage was found from Chicagos site, it's hard to format it so if it stops looking good in newer browsers, good luck!<br /><br />
                                </li><li>
                                	archiveTeamPictures: This program displays all the teams and leagues available to a certain season and sport. Again this program can work in two ways, 
                                    one old way and one new. The old way takes the sport, year, and season as parameters, then creates an identifier with them and compares it to 
                                    the teampicturearchive database. Any rows it finds with that as the subcat are printed to the screen. If the picture each row points to exists on the
                                    server, the team name will be shown as a link and when clicked, changes the team picture frame to whatever team picture was clicked. <br />
                                    The new system looks the same but works much different. It takes in seasonID and sportID as parameters, then gets every league and team connected 
                                    to the two. It pulls all the teams from the database by order of leagueID, then league day. As it cycles through the team if it finds the current team
                                    is in a new league, the league header is printed then the teams continue. Each team is checked for an existant picture and if so, turned into a link
                                    so that, again, the picture page can show their picture.<br /><br />
                                </li><li>
                                	picturePage_f: This is the head frame. When a season is selected from the picture pages, this is loaded. In it is two frames, one that loads 
                                    archiveTeamPictures on the bottom, and another by default loads topFrame.php. When a link from archiveTeamPictures is clicked, the top frame gets
                                    changed to archivePicturePage with the team selected showing up.<br /><br />
                                </li><li>
                                	topFrame.php: Default page for the top frame of picture pages. Takes in sportID as a parameter and loads the correct logo accordingly.
                                </li>
                                </ul>
                            </td>
                        </tr>
                        <tr>
                            <th>
                                <a name="duringSeason">During A Season</a><a style="font-size:10px" href='#home'> (Home)</a>
                            </th>
                        </tr>
                        <tr>
                        	<td>
                            	During seasons the system pretty much takes care of itself. Some troubles might come up in the score reporter but during the beta season I only had 2 issues,
                          		both of which got fixed. Just make sure the standings make sense, and <a href="#closeStandingsWeek">every team has a score submission before their next 
                                week</a> and stuff will move smooth.
                            </td>
                        </tr>
                        <tr>
                            <th>
                                <a name="editReports">Editing score reports</a><a style="font-size:10px" href='#home'> (Home)</a>
                            </th>
                        </tr>
                        <tr>
                        	<td>
                            	Using shear genius, I have taken editing score reporting from 3 steps to 1. Simply open 'Fix standings' in the leagues menu, input your sport, league, and 
                                week, and change whatever is wrong to whatever you believe is right. This will update the standings, team pages in the control panel, and whatever else may
                                reference it.
                            </td>
                        </tr>
                        <tr>
                            <th>
                                <a name="spiritReports">Creating Phantom Spirits</a><a style="font-size:10px" href='#home'> (Home)</a>
                            </th>
                        </tr>
                        <tr>
                        	<td>
                            	Sometimes it is benificial to create spirit scores for teams (eg so that at the beginning of the season N/A won't show up for a team's spirit). Simply open
                                'Create Spirit Scores' from the teams drop down, and enter the top info as usual. Once the team is entered you'll see a drop down under the teams drop down
                                for choosing the spirit you want to give the current team, and a button for submitting. All 'phantom' spirit scores you create are kept in the holding box
                                at the bottom of the form, and you can delete them any time by checking their checkbox and pressing 'Delete.'
                            </td>
                        </tr>
                        <tr>
                            <th>
                                <a name="splitLeagues">Splitting Leagues</a><a style="font-size:10px" href='#home'> (Home)</a>
                            </th>
                        </tr>
                        <tr>
                        	<td>
                            	In order to split a league into two new leagues follow these steps:
                                <ol>
                                	<li>
                                    	<a href="#createLeague">Create both the new leagues</a>
                                    </li><li>
                                    	Go to 'Split a League' in the leagues drop down
                                    </li><li>
                                        Enter in all the sport and league information, then all the teams should show up from the 'League to be split' in order of their standings.
                                    </li><li>
                                    	The 1, 2 dropdowns are all for which new league will the team go to, edit any if necessary then press 'Setup' to complete the league splitting
                                    </li>
                                </ol>
                                NOTE: When entering the two new league's schedule data you will run into problems with which week each new date is associated with. In order to fix this 
                                open 'Load a schedule into the database' from the leagues menu, and punch in the data for your new league. When you enter in the new schedule data you 
                                will see all the weeks you submitted. You will also notice they are ordered 1, 2, 3, etc. which this is probably wrong. What you want is to set those 
                                week numbers to whatever week they will be in the score reporter, then the score reporter and standings pages can keep running smooth.
                            </td>
                        </tr>
                        <tr>
                            <th>
                                <a name="turnOnCancel">Turning on the Cancel Option</a><a style="font-size:10px" href='#home'> (Home)</a>
                            </th>
                        </tr>
                        <tr>
                        	<td>
                            	Open 'Turn on Cancel' in the leagues dropdown. This will bring up all the current leagues in the score reporter. Click on which leagues you want the cancel
                                option to be turned on for then click 'Turn on Cancel' on the bottom of the form. Done! :)
                            </td>
                        </tr>
                        <tr>
                            <th>
                                <a name="teamPictures">Team Pictures</a><a style="font-size:10px" href='#home'> (Home)</a>
                            </th>
                        </tr>
                        <tr>
                        	<td>
                            	As of August 7th I need to update how this works. For now, keep the folder naming concepts that exact same as 2012. To find out a pictures name open
                                'Team Picture ID's' from the teams dropdown and name each picture the teamID given with extension '.jpg' or '.JPG'. Put the pictures in the required folders
                                and the league picture pages should figure it out from there. To add the new season to the team pictures main page, just copy the previous 'Season Teams'
                                link and change either the seasonID accordingly. Remember to always have a few seasons in advance in the seasons database because it's very important!
                                P.S. for now when a league gets split, their team picture name has to be changed to their new pictureID for it to show up on our website.
                            </td>
                        </tr>
                        <tr>
                            <th>
                                <a name="teamCaptains">Making sure all Teams have Captains</a><a style="font-size:10px" href='#home'> (Home)</a>
                            </th>
                        </tr>
                        <tr>
                        	<td>
                            	This is only important for the emailing captains function on the control panel, and the late email that gets sent to captains. To check what teams have no
                                team captain go to 'Edit teams with no Captain' in the teams drop down. As of August 7th this only gets teams that are available in the score reporter
                                however i will fix it so it works for teams in registration too. To use this program, enter the name / email/ other info for any teams then press Submit.
                                If you have submitted anything for the fields 'first name', 'last name', and a valid email then the team will be granted a new captain.
                            </td>
                        </tr>
                        <tr>
                            <th>
                                <a name="closeStandingsWeek">Closing Standings For a Week</a><a style="font-size:10px" href='#home'> (Home)</a>
                            </th>
                        </tr>
                        <tr>
                        	<td>
                            	Before a week can be completed and the score reporter/ standings can move on every team in that league must report scores. This can be done either with the
                                score reporter on the public website, or the fix standings section of the control panel. With the score reporter, simply punch in the league and team that needs
                                to submit their scores and press 'Submit', warning this does get error checked. With the fix standings program punch in the sport, league, and week then edit
                                any teams data and press submit. This does not get error checked and will create/ update any score submissions accordinly.
                            </td>
                        </tr>
                        <tr>
                            <th>
                                <a name="endSeason">End of Season Routines</a><a style="font-size:10px" href='#home'> (Home)</a>
                            </th>
                        </tr>
                        <tr>
                        	<td>
                            	There is almost nothing that needs to be done at the end of a season. Most of the stuff that needs to be done is for <a href="#changeSeason">starting a
                                new season. Never the less you will have to close out standings for good! Also, the score reporter will know it should be in playoff mode when the week it's
                                in is the same or greater than the playoff start week.
                            </td>
                        </tr>
                        <tr>
                            <th>
                                <a name="closeStandingsSeason">Closing out Standings for Good</a><a style="font-size:10px" href='#home'> (Home)</a>
                            </th>
                        </tr>
                        <tr>
                        	<td>
                            	This program makes it so you will never have to make a hookup another html page for the final standings. Go to the 'Close out a League' program of the leagues
                                drop down, and input the sport and league you want to close standings for. The leagues for this are the ones available in the score reporter. When a league is
                                selected, they will be sorted by their final position and spirits by their final spirits. If you want to order the league any differently you can using the drop
                                downs, and once you're done press 'Close Standings' to have the new final standings page show up for that league.
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr height="800px">
            	<td>
                	 <br />
                </td>
            </tr>
        </table>
    </body>
</html>
